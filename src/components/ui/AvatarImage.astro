---
import type { HTMLAttributes } from 'astro/types';

function generateAvatar(value: string): string {
  const parts = value.split(' ');

  if (parts.length === 1) {
    return parts[0].slice(0, 2).toLocaleUpperCase();
  }

  return `${parts[0].charAt(0)}${parts[parts.length - 1].charAt(0)}`.toLocaleUpperCase();
}

interface Props extends HTMLAttributes<'img'> {
  alt: string;
}

const { class: className, 'class:list': classList, src, alt } = Astro.props;

let avatarAlt = '';

if (!src) {
  avatarAlt = generateAvatar(alt);
}
---

{
  !src ? (
    <span
      class:list={[
        'flex items-center justify-center bg-[#e5f3ff] text-3xl text-[#5da3ff]',
        className,
        classList,
      ]}
    >
      {avatarAlt}
    </span>
  ) : (
    <img
      class:list={[className, classList]}
      src={src}
      alt={`${alt} avatar`}
      loading="lazy"
    />
  )
}
