---
import type { HTMLAttributes } from 'astro/types';
import { cva, type VariantProps } from 'class-variance-authority';
import Link from './Link.astro';

const badgeVariants = cva(
  'inline-flex items-center justify-center rounded-md border text-xs font-semibold w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden',
  {
    variants: {
      variant: {
        default:
          'border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90',
        secondary:
          'border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90',
        success:
          'border-transparent bg-success text-white [a&]:hover:bg-success/90 focus-visible:ring-success/20 dark:focus-visible:ring-success/40 dark:bg-success/60',
        destructive:
          'border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',
        outline:
          'text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground',
      },
      size: {
        default: 'px-2.5 py-0.5',
        sm: 'px-1 py-[1px]',
      },
    },
    defaultVariants: {
      variant: 'default',
      size: 'default',
    },
  },
);

interface Props
  extends HTMLAttributes<'a'>,
    HTMLAttributes<'span'>,
    VariantProps<typeof badgeVariants> {}

const {
  href = null,
  variant,
  size,
  class: className,
  'class:list': classList,
  ...props
} = Astro.props;
---

{
  href ? (
    <Link
      href={href}
      class:list={[badgeVariants({ variant, size }), className, classList]}
    >
      <slot />
    </Link>
  ) : (
    <span
      class:list={[badgeVariants({ variant, size }), className, classList]}
      {...props}
    >
      <slot />
    </span>
  )
}
